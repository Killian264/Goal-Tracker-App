{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Killian\\\\Desktop\\\\Projects\\\\Goal-Tracker\\\\reactappthingy\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DailyGoals from './DailyGoals';\nimport OtherGoals from './OtherGoals';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      goals: {\n        dailyGoals: [{\n          id: 1,\n          title: 'Programme',\n          snippit: 'Write Code',\n          totalDays: 30,\n          daysChecked: 20,\n          weeklyChecked: [true, false, true, true, false, false, false]\n        }, {\n          id: 2,\n          title: 'Learn React',\n          snippit: 'Write Code',\n          totalDays: 30,\n          daysChecked: 20,\n          weeklyChecked: [true, true, false, true, false, false, false]\n        }, {\n          id: 3,\n          title: 'Be Cool',\n          snippit: 'Yea',\n          totalDays: 30,\n          daysChecked: 20,\n          weeklyChecked: [false, true, true, true, false, false, false]\n        }],\n        otherGoalsCategories: [{\n          category: 'Programming',\n          otherGoals: [{\n            id: 1,\n            title: 'Learn React',\n            snippit: 'Yea',\n            startDate: new Date(2019, 7, 1),\n            endDate: new Date(2019, 7, 15),\n            percentComplete: 20\n          }, {\n            id: 2,\n            title: 'Learn to Code',\n            snippit: 'Yea',\n            startDate: new Date(2019, 5, 1),\n            endDate: new Date(2019, 8, 16),\n            percentComplete: 40\n          }]\n        }, {\n          category: 'Reading',\n          otherGoals: [{\n            id: 1,\n            title: 'Read a book',\n            snippit: 'Yea',\n            startDate: new Date(2019, 7, 8),\n            endDate: new Date(2019, 7, 30),\n            percentComplete: 0\n          }, {\n            id: 2,\n            title: 'Read 20 books',\n            snippit: 'Yea',\n            startDate: new Date(2019, 1, 1),\n            endDate: new Date(2020, 1, 1),\n            percentComplete: 50\n          }]\n        }]\n      }\n    };\n  }\n\n  render() {\n    return (// <React.Fragment>\n      //     <DailyGoals dailyGoals={this.state.goals.dailyGoals} />\n      // </React.Fragment>\n      React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(DailyGoals, {\n        dailyGoals: this.state.goals.dailyGoals,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }))\n    );\n  }\n\n}\n\nexport default App;\nconst createGoalBtn = document.getElementById('button');\nconst goalCreatePopup = document.getElementById('creategoaloverlay');\nconst cancelBtn = document.getElementById('cancelbutton');\ncreateGoalBtn.addEventListener('click', () => {\n  goalCreatePopup.style.display = \"block\";\n}, false);\ncancelBtn.addEventListener('click', () => {\n  goalCreatePopup.style.display = \"none\";\n}, false);\n\nconst navSlide = () => {\n  const navdropdown = document.querySelector('.navdropdown');\n  const nav = document.querySelector('.sidenav');\n  const navlinks = document.querySelectorAll('.navlinks a');\n  navdropdown.addEventListener('click', () => {\n    nav.classList.toggle('nav-active');\n    navlinks.forEach((link, index) => {\n      if (link.style.animation) {\n        link.style.animation = '';\n      } else {\n        link.style.animation = \"navLinkFade 0.5s ease forwards \".concat(index / 7 + .15, \"s\");\n      }\n    });\n    navdropdown.classList.toggle('toggle');\n  });\n};\n\nnavSlide();","map":{"version":3,"sources":["C:\\Users\\Killian\\Desktop\\Projects\\Goal-Tracker\\reactappthingy\\my-app\\src\\App.js"],"names":["React","Component","DailyGoals","OtherGoals","App","state","goals","dailyGoals","id","title","snippit","totalDays","daysChecked","weeklyChecked","otherGoalsCategories","category","otherGoals","startDate","Date","endDate","percentComplete","render","createGoalBtn","document","getElementById","goalCreatePopup","cancelBtn","addEventListener","style","display","navSlide","navdropdown","querySelector","nav","navlinks","querySelectorAll","classList","toggle","forEach","link","index","animation"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport DailyGoals from './DailyGoals';\nimport OtherGoals from './OtherGoals';\n\nclass App extends Component {\n    state = {\n        goals:{\n            dailyGoals : [\n                {\n                    id: 1,\n                    title: 'Programme',\n                    snippit: 'Write Code',\n                    totalDays: 30,\n                    daysChecked: 20,\n                    weeklyChecked: [true, false, true, true, false, false, false]\n                },\n                {\n                    id: 2,\n                    title: 'Learn React',\n                    snippit: 'Write Code',\n                    totalDays: 30,\n                    daysChecked: 20,\n                    weeklyChecked: [true, true, false, true, false, false, false]\n                },\n                {\n                    id: 3,\n                    title: 'Be Cool',\n                    snippit: 'Yea',\n                    totalDays: 30,\n                    daysChecked: 20,\n                    weeklyChecked: [false, true, true, true, false, false, false]\n                }\n            ],\n            otherGoalsCategories:[\n                {\n                    category: 'Programming',\n                    otherGoals:[\n                        {\n                            id: 1,\n                            title: 'Learn React',\n                            snippit: 'Yea',\n                            startDate: new Date(2019, 7, 1),\n                            endDate: new Date(2019, 7, 15 ),\n                            percentComplete: 20\n                        },\n                        {\n                            id: 2,\n                            title: 'Learn to Code',\n                            snippit: 'Yea',\n                            startDate: new Date(2019, 5, 1),\n                            endDate: new Date(2019, 8, 16 ),\n                            percentComplete: 40\n                        }\n                    ]\n                },\n                {\n                    category: 'Reading',\n                    otherGoals:[\n                        {\n                            id: 1,\n                            title: 'Read a book',\n                            snippit: 'Yea',\n                            startDate: new Date(2019, 7, 8),\n                            endDate: new Date(2019, 7, 30),\n                            percentComplete: 0\n                        },\n                        {\n                            id: 2,\n                            title: 'Read 20 books',\n                            snippit: 'Yea',\n                            startDate: new Date(2019, 1, 1),\n                            endDate: new Date(2020, 1, 1 ),\n                            percentComplete: 50\n                        }\n                    ]\n                }\n            ]\n        }\n    }\n    render() {\n        return (\n            // <React.Fragment>\n            //     <DailyGoals dailyGoals={this.state.goals.dailyGoals} />\n            // </React.Fragment>\n            <React.Fragment>\n                <DailyGoals dailyGoals={this.state.goals.dailyGoals} />\n            </React.Fragment>\n          );\n    }\n}\n\nexport default App;\n\nconst createGoalBtn = document.getElementById('button');\nconst goalCreatePopup = document.getElementById('creategoaloverlay');\nconst cancelBtn = document.getElementById('cancelbutton');\n\ncreateGoalBtn.addEventListener('click', ()=>{\n    goalCreatePopup.style.display = \"block\";\n}, false)\n\ncancelBtn.addEventListener('click', ()=>{\n    goalCreatePopup.style.display = \"none\";\n}, false)\n\nconst navSlide = () => {\n    const navdropdown = document.querySelector('.navdropdown');\n    const nav = document.querySelector('.sidenav');\n    const navlinks = document.querySelectorAll('.navlinks a')\n\n    navdropdown.addEventListener('click', ()=>{\n        nav.classList.toggle('nav-active');\n        navlinks.forEach((link, index)=>{\n            if(link.style.animation){\n                link.style.animation = '';\n            }\n            else{\n                link.style.animation = `navLinkFade 0.5s ease forwards ${(index / 7) + .15}s`;\n            }\n        });\n\n        navdropdown.classList.toggle('toggle');\n    });\n}\nnavSlide();"]},"metadata":{},"sourceType":"module"}