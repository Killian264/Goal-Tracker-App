{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Killian\\\\Desktop\\\\Projects\\\\Goal-Tracker\\\\reactappthingy\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport DailyGoalHeading from './DailyGoalHeading';\nimport DailyGoals from './DailyGoals';\nimport OtherGoals from './OtherGoals';\nimport Overlay from './Overlay'; // import TopNav from './TopNav';\n\nimport uuid from 'uuid';\nimport { getToday } from './commonCommands';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      goals: {\n        dailyGoals: [{\n          id: 1,\n          title: 'Programme',\n          snippit: 'Write Code',\n          startDate: '2019, 7, 1 00:00',\n          endDate: '2019, 7, 15 00:00',\n          daysChecked: 20,\n          weeklyChecked: [true, false, true, true, false, false, false]\n        }, {\n          id: 2,\n          title: 'Learn React',\n          snippit: 'Write Code',\n          startDate: '2019, 7, 1 00:00',\n          endDate: '2019, 7, 15 00:00',\n          daysChecked: 20,\n          weeklyChecked: [true, true, false, true, false, false, false]\n        }, {\n          id: 3,\n          title: 'Be Cool',\n          snippit: 'Yea',\n          startDate: '2019, 7, 1 00:00',\n          endDate: '2019, 7, 15 00:00',\n          daysChecked: 20,\n          weeklyChecked: [false, true, true, true, false, false, false]\n        }],\n        otherGoalsCategories: [{\n          category: 'Programming',\n          id: 1,\n          otherGoals: [{\n            id: 1,\n            title: 'Learn React',\n            snippit: 'Code a bunch of stuff',\n            startDate: '2019, 7, 1 00:00',\n            endDate: '2019, 7, 15 00:00',\n            percentComplete: 20\n          }, {\n            id: 2,\n            title: 'Learn to Code',\n            snippit: 'Learn React, C++, SQL, and more C#',\n            startDate: '2019, 5, 1 00:00',\n            endDate: '2019, 8, 16 00:00',\n            percentComplete: 40\n          }]\n        }, {\n          category: 'Reading',\n          id: 2,\n          otherGoals: [{\n            id: 1,\n            title: 'Read a book',\n            snippit: 'Read the blade itself',\n            startDate: '2019, 7, 8 00:00',\n            endDate: '2019, 7, 30 00:00',\n            percentComplete: 0\n          }, {\n            id: 2,\n            title: 'Read 20 books',\n            snippit: \"Should'nt be too hard he thought\",\n            startDate: '2019, 1, 1 00:00',\n            endDate: '2020, 1, 1 00:00',\n            percentComplete: 50\n          }]\n        }, {\n          category: 'Goal Tracker Project',\n          id: 3,\n          otherGoals: [{\n            id: 1,\n            title: 'Add Goal Adding',\n            snippit: 'Add Form and State Addition',\n            startDate: '2019, 7, 9 00:00',\n            endDate: '2019, 7, 11 00:00',\n            percentComplete: 0\n          }, {\n            id: 2,\n            title: 'Add Goal Deletion',\n            snippit: 'Add Form and State Deletion',\n            startDate: '2019, 7, 9 00:00',\n            endDate: '2019, 7, 11 00:00',\n            percentComplete: 0\n          }, {\n            id: 3,\n            title: 'Fix Small bugs',\n            snippit: 'SideNav Stuff',\n            startDate: '2019, 7, 9 00:00',\n            endDate: '2019, 7, 12 00:00',\n            percentComplete: 0\n          }, {\n            id: 4,\n            title: 'Add Sorting Box',\n            snippit: 'Should be easy after I learn add and delete stuff',\n            startDate: '2019, 7, 9 00:00',\n            endDate: '2019, 7, 12 00:00',\n            percentComplete: 0\n          }, {\n            id: 5,\n            title: 'Add Login and backend stuff',\n            snippit: 'This might be the hard part',\n            startDate: '2019, 7, 9 00:00',\n            endDate: '2019, 7, 19 00:00',\n            percentComplete: 0\n          }]\n        }],\n        completed: {\n          dailyGoals: [{\n            id: 1,\n            title: 'Programme',\n            snippit: 'Write Code',\n            startDate: '2019, 7, 1 00:00',\n            endDate: '2019, 7, 15 00:00',\n            daysChecked: 20,\n            weeklyChecked: [true, false, true, true, false, false, false]\n          }],\n          otherGoalsCategories: [{\n            category: 'Programming',\n            id: 1,\n            otherGoals: [{\n              id: 1,\n              title: 'Learn React',\n              snippit: 'Code a bunch of stuff',\n              startDate: '2019, 7, 1 00:00',\n              endDate: '2019, 7, 15 00:00',\n              percentComplete: 20\n            }]\n          }]\n        }\n      },\n      otherStuffs: {\n        overlayIsHidden: true\n      }\n    };\n\n    this.deleteGoal = (key, category) => {\n      let state = this.state;\n      let toCompletedGoal;\n\n      if (category === 'daily') {\n        // \n        let filteredArr = this.state.goals.dailyGoals;\n        this.state.goals.dailyGoals.map((goal, index) => {\n          if (goal.id === key) {\n            filteredArr.splice(index, 1);\n            toCompletedGoal = goal;\n          }\n        });\n        console.log(toCompletedGoal);\n        state.goals.dailyGoals = filteredArr;\n        this.setState({\n          [state]: state\n        });\n      } else {\n        this.state.goals.otherGoalsCategories.map((catagories, index) => {\n          if (catagories.category === category) {\n            // sets filtered Arr to goal then filters out the deleted goal\n            let filteredArr = this.state.goals.otherGoalsCategories[index].otherGoals; // Finds and removes goal\n\n            this.state.goals.otherGoalsCategories[index].otherGoals.map((goal, index) => {\n              if (goal.id === key) {\n                filteredArr.splice(index, 1);\n                toCompletedGoal = goal;\n              }\n            }); // sets local state\n\n            state.goals.otherGoalsCategories[index].otherGoals = filteredArr; //checks if category is empty\n\n            if (state.goals.otherGoalsCategories[index].otherGoals.length === 0) {\n              state.goals.otherGoalsCategories.splice(index, 1);\n            }\n          }\n        });\n      }\n\n      this.setState({\n        [state]: state\n      });\n    };\n\n    this.completed = (goal, category, id) => {};\n\n    this.closeGoalOverlay = () => {\n      let state = this.state;\n      state.otherStuffs.overlayIsHidden = true;\n      this.setState({\n        state: state\n      });\n    };\n\n    this.displayGoalOverlay = () => {\n      let state = this.state;\n      state.otherStuffs.overlayIsHidden = false;\n      this.setState({\n        state: state\n      });\n    };\n\n    this.stateAdd = newGoal => {\n      let state = this.state;\n      let startDate = getToday(); // check if daily\n\n      if (newGoal.type === 'daily') {\n        newGoal = {\n          id: uuid.v4(),\n          title: newGoal.title,\n          snippit: newGoal.snippit,\n          startDate: startDate,\n          endDate: newGoal.endDate + \" 00:00\",\n          daysChecked: 0,\n          weeklyChecked: [false, false, false, false, false, false, false] // push to local state\n\n        };\n        state.goals.dailyGoals.push(newGoal);\n      } else {\n        let category = newGoal.category; // the new category\n\n        let newCategory = newGoal.newCategory; // true of false if new category\n\n        newGoal = {\n          id: uuid.v4(),\n          title: newGoal.title,\n          snippit: newGoal.snippit,\n          startDate: startDate,\n          endDate: newGoal.endDate + \" 00:00\",\n          percentComplete: 0 //check if new category\n\n        };\n\n        if (newCategory === true) {\n          newGoal = {\n            category: category,\n            id: uuid.v4(),\n            otherGoals: [newGoal] // push to local state\n\n          };\n          state.goals.otherGoalsCategories.push(newGoal);\n        } else {\n          //finds category to add to\n          this.state.goals.otherGoalsCategories.map((catagories, index) => {\n            if (catagories.category === category) {\n              state.goals.otherGoalsCategories[index].otherGoals.push(newGoal);\n            }\n          });\n        }\n      } //push to state and close overlay\n\n\n      state.otherStuffs.overlayIsHidden = true;\n      this.setState({\n        state: state\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidenav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"Images/profile.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"a\", {\n      href: \"http://localhost:3000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Guest\")), React.createElement(\"div\", {\n      className: \"navlinks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"http://localhost:3000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, \"Dashboard\"), React.createElement(\"a\", {\n      href: \"http://localhost:3000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Goals\"), React.createElement(\"a\", {\n      href: \"http://localhost:3000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, \"Tasks\"), React.createElement(\"a\", {\n      href: \"http://localhost:3000\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300\n      },\n      __self: this\n    }, \"Portfolio Home\"))), React.createElement(\"div\", {\n      className: \"topnav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"navdropdown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"line1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"line3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    })), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"Current Goals\"), React.createElement(\"div\", {\n      className: \"creategoalbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      id: \"button\",\n      onClick: this.displayGoalOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, \"Create Goal\"))), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"goaltypeselector\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, \"Sort Goals\"), React.createElement(\"div\", {\n      className: \"sort\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, \"Show Current\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, \"Show Completed\")))), React.createElement(\"div\", {\n      className: \"goaltype\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324\n      },\n      __self: this\n    }, \"TimeFrame\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, \"Daily Goals\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, \"Weekly Goals\")))), React.createElement(\"div\", {\n      className: \"catagories\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }, \"Catagories\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    }, \"Programming\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, \"Knowledge\")), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: \"../src/Images/pressed.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Workout\"))))), React.createElement(\"div\", {\n      className: \"goals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"dailygoals\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(DailyGoalHeading, {\n      dailyGoals: this.state.goals.dailyGoals,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"dailygoalslist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, React.createElement(DailyGoals, {\n      dailyGoals: this.state.goals.dailyGoals,\n      deleteGoal: this.deleteGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343\n      },\n      __self: this\n    }))), React.createElement(OtherGoals, {\n      otherGoalCategories: this.state.goals.otherGoalsCategories,\n      deleteGoal: this.deleteGoal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    })), !this.state.otherStuffs.overlayIsHidden && React.createElement(Overlay, {\n      closeGoalOverlay: this.closeGoalOverlay,\n      otherGoalCategories: this.state.goals.otherGoalsCategories,\n      stateAdd: this.stateAdd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; // const createGoalBtn = document.getElementById('button');\n// const goalCreatePopup = document.getElementById('creategoaloverlay');\n// const cancelBtn = document.getElementById('cancelbutton');\n// createGoalBtn.addEventListener('click', ()=>{\n//     goalCreatePopup.style.display = \"block\";\n// }, false)\n// cancelBtn.addEventListener('click', ()=>{\n//     goalCreatePopup.style.display = \"none\";\n// }, false)\n// const navSlide = () => {\n//     const navdropdown = document.querySelector('.navdropdown');\n//     const nav = document.querySelector('.sidenav');\n//     const navlinks = document.querySelectorAll('.navlinks a')\n//     navdropdown.addEventListener('click', ()=>{\n//         nav.classList.toggle('nav-active');\n//         navlinks.forEach((link, index)=>{\n//             if(link.style.animation){\n//                 link.style.animation = '';\n//             }\n//             else{\n//                 link.style.animation = `navLinkFade 0.5s ease forwards ${(index / 7) + .15}s`;\n//             }\n//         });\n//         navdropdown.classList.toggle('toggle');\n//     });\n// }\n// navSlide();","map":{"version":3,"sources":["C:\\Users\\Killian\\Desktop\\Projects\\Goal-Tracker\\reactappthingy\\my-app\\src\\App.js"],"names":["React","Component","DailyGoalHeading","DailyGoals","OtherGoals","Overlay","uuid","getToday","App","state","goals","dailyGoals","id","title","snippit","startDate","endDate","daysChecked","weeklyChecked","otherGoalsCategories","category","otherGoals","percentComplete","completed","otherStuffs","overlayIsHidden","deleteGoal","key","toCompletedGoal","filteredArr","map","goal","index","splice","console","log","setState","catagories","length","closeGoalOverlay","displayGoalOverlay","stateAdd","newGoal","type","v4","push","newCategory","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport DailyGoalHeading from './DailyGoalHeading';\nimport DailyGoals from './DailyGoals';\nimport OtherGoals from './OtherGoals';\nimport Overlay from './Overlay';\n// import TopNav from './TopNav';\nimport uuid from 'uuid'\nimport {getToday} from './commonCommands'\n\nclass App extends Component {\n    state = {\n        goals:{\n            dailyGoals : [\n                {\n                    id: 1,\n                    title: 'Programme',\n                    snippit: 'Write Code',\n                    startDate: '2019, 7, 1 00:00',\n                    endDate: '2019, 7, 15 00:00',\n                    daysChecked: 20,\n                    weeklyChecked: [true, false, true, true, false, false, false]\n                },\n                {\n                    id: 2,\n                    title: 'Learn React',\n                    snippit: 'Write Code',\n                    startDate: '2019, 7, 1 00:00',\n                    endDate: '2019, 7, 15 00:00',\n                    daysChecked: 20,\n                    weeklyChecked: [true, true, false, true, false, false, false]\n                },\n                {\n                    id: 3,\n                    title: 'Be Cool',\n                    snippit: 'Yea',\n                    startDate: '2019, 7, 1 00:00',\n                    endDate: '2019, 7, 15 00:00',\n                    daysChecked: 20,\n                    weeklyChecked: [false, true, true, true, false, false, false]\n                }\n            ],\n            otherGoalsCategories:[\n                {\n                    category: 'Programming',\n                    id: 1,\n                    otherGoals:[\n                        {\n                            id: 1,\n                            title: 'Learn React',\n                            snippit: 'Code a bunch of stuff',\n                            startDate: '2019, 7, 1 00:00',\n                            endDate: '2019, 7, 15 00:00',\n                            percentComplete: 20\n                        },\n                        {\n                            id: 2,\n                            title: 'Learn to Code',\n                            snippit: 'Learn React, C++, SQL, and more C#',\n                            startDate: '2019, 5, 1 00:00',\n                            endDate: '2019, 8, 16 00:00',\n                            percentComplete: 40\n                        }\n                    ]\n                },\n                {\n                    category: 'Reading',\n                    id: 2,\n                    otherGoals:[\n                        {\n                            id: 1,\n                            title: 'Read a book',\n                            snippit: 'Read the blade itself',\n                            startDate: '2019, 7, 8 00:00',\n                            endDate: '2019, 7, 30 00:00',\n                            percentComplete: 0\n                        },\n                        {\n                            id: 2,\n                            title: 'Read 20 books',\n                            snippit: \"Should'nt be too hard he thought\",\n                            startDate: '2019, 1, 1 00:00',\n                            endDate: '2020, 1, 1 00:00',\n                            percentComplete: 50\n                        }\n                    ]\n                },\n                {\n                    category: 'Goal Tracker Project',\n                    id: 3,\n                    otherGoals:[\n                        {\n                            id: 1,\n                            title: 'Add Goal Adding',\n                            snippit: 'Add Form and State Addition',\n                            startDate: '2019, 7, 9 00:00',\n                            endDate: '2019, 7, 11 00:00',\n                            percentComplete: 0\n                        },\n                        {\n                            id: 2,\n                            title: 'Add Goal Deletion',\n                            snippit: 'Add Form and State Deletion',\n                            startDate: '2019, 7, 9 00:00',\n                            endDate: '2019, 7, 11 00:00',\n                            percentComplete: 0\n                        },\n                        {\n                            id: 3,\n                            title: 'Fix Small bugs',\n                            snippit: 'SideNav Stuff',\n                            startDate: '2019, 7, 9 00:00',\n                            endDate: '2019, 7, 12 00:00',\n                            percentComplete: 0\n                        },\n                        {\n                            id: 4,\n                            title: 'Add Sorting Box',\n                            snippit: 'Should be easy after I learn add and delete stuff',\n                            startDate: '2019, 7, 9 00:00',\n                            endDate: '2019, 7, 12 00:00',\n                            percentComplete: 0\n                        },\n                        {\n                            id: 5,\n                            title: 'Add Login and backend stuff',\n                            snippit: 'This might be the hard part',\n                            startDate: '2019, 7, 9 00:00',\n                            endDate: '2019, 7, 19 00:00',\n                            percentComplete: 0\n                        }\n                        \n                    ]\n                }\n            ],\n            completed : {\n                dailyGoals : [\n                    {\n                        id: 1,\n                        title: 'Programme',\n                        snippit: 'Write Code',\n                        startDate: '2019, 7, 1 00:00',\n                        endDate: '2019, 7, 15 00:00',\n                        daysChecked: 20,\n                        weeklyChecked: [true, false, true, true, false, false, false]\n                    }\n                ],\n                otherGoalsCategories : [\n                    {\n                        category: 'Programming',\n                        id: 1,\n                        otherGoals:[\n                            {\n                                id: 1,\n                                title: 'Learn React',\n                                snippit: 'Code a bunch of stuff',\n                                startDate: '2019, 7, 1 00:00',\n                                endDate: '2019, 7, 15 00:00',\n                                percentComplete: 20\n                            }\n                        ]\n                    }\n                ]\n            }\n        },\n        otherStuffs:{\n            overlayIsHidden: true\n        }\n    }\n\n    deleteGoal = (key, category) => {\n        let state = this.state;\n        let toCompletedGoal;\n        if(category === 'daily'){\n            // \n            let filteredArr = this.state.goals.dailyGoals;\n            this.state.goals.dailyGoals.map((goal, index) =>{\n                if(goal.id === key){ \n                    filteredArr.splice(index, 1); \n                    toCompletedGoal = goal;\n                }\n            })\n            console.log(toCompletedGoal)\n            state.goals.dailyGoals = filteredArr\n            this.setState({\n                [state]: state\n              })\n        }\n        else{\n            this.state.goals.otherGoalsCategories.map((catagories, index) => {\n                if(catagories.category === category){\n                    // sets filtered Arr to goal then filters out the deleted goal\n                    let filteredArr = this.state.goals.otherGoalsCategories[index].otherGoals;\n                    // Finds and removes goal\n                    this.state.goals.otherGoalsCategories[index].otherGoals.map((goal, index) =>{\n                        if(goal.id === key){ \n                            filteredArr.splice(index, 1); \n                            toCompletedGoal = goal;\n                        }\n                    })\n                    // sets local state\n                    state.goals.otherGoalsCategories[index].otherGoals = filteredArr\n                    //checks if category is empty\n                    if((state.goals.otherGoalsCategories[index].otherGoals).length === 0){\n                        state.goals.otherGoalsCategories.splice(index, 1);\n                    }\n                }\n            })\n            \n        }\n        this.setState({\n            [state]: state\n        })\n        \n    }\n    completed = (goal, category, id) => {\n        \n    }\n    closeGoalOverlay = () => {\n        let state = this.state\n        state.otherStuffs.overlayIsHidden = true;\n        this.setState({\n            state: state\n          })\n    }\n    displayGoalOverlay = () => {\n        let state = this.state\n        state.otherStuffs.overlayIsHidden = false;\n        this.setState({\n            state: state\n          })\n    }\n    stateAdd = (newGoal) => {\n        let state = this.state\n        let startDate = getToday()\n        // check if daily\n        if(newGoal.type === 'daily'){\n            newGoal = {\n                id: uuid.v4(),\n                title: newGoal.title,\n                snippit: newGoal.snippit,\n                startDate: startDate,\n                endDate: newGoal.endDate + \" 00:00\",\n                daysChecked: 0,\n                weeklyChecked: [false, false, false, false, false, false, false]\n            }\n            // push to local state\n            state.goals.dailyGoals.push(newGoal);\n        }\n        else{\n            let category = newGoal.category; // the new category\n            let newCategory = newGoal.newCategory; // true of false if new category\n            newGoal = {\n                id: uuid.v4(),\n                title: newGoal.title,\n                snippit: newGoal.snippit,\n                startDate: startDate,\n                endDate: newGoal.endDate + \" 00:00\",\n                percentComplete: 0\n            }\n            //check if new category\n            if(newCategory === true){\n                newGoal = {\n                    category: category,\n                    id: uuid.v4(),\n                    otherGoals: [\n                        newGoal\n                    ]\n                }\n                // push to local state\n                state.goals.otherGoalsCategories.push(newGoal);\n            }\n            else{\n                //finds category to add to\n                this.state.goals.otherGoalsCategories.map((catagories, index) => {\n                    if(catagories.category === category){\n                        state.goals.otherGoalsCategories[index].otherGoals.push(newGoal)\n                    }\n                })\n            }\n        }\n            //push to state and close overlay\n            state.otherStuffs.overlayIsHidden = true;\n            this.setState({\n                state: state\n              })\n    }\n    render() {\n        return (\n            <div>\n            <div className=\"sidenav\">\n                <div className=\"user\">\n                    <img src=\"Images/profile.png\" alt=\"\"/>\n                    <a href=\"http://localhost:3000\">Guest</a>\n                </div>\n                <div className=\"navlinks\">\n                    <a href= \"http://localhost:3000\" >Dashboard</a>\n                    <a href= \"http://localhost:3000\" >Goals</a>\n                    <a href= \"http://localhost:3000\" >Tasks</a>\n                    <a href=\"http://localhost:3000\" >Portfolio Home</a>\n                </div>\n            </div>\n            <div className=\"topnav\">\n                    <div className = \"navdropdown\">\n                        <div className=\"line1\"></div>\n                        <div className=\"line2\"></div>\n                        <div className=\"line3\"></div>\n                    </div>\n                    <h1>Current Goals</h1>\n                    <div className=\"creategoalbutton\">\n                            <button id=\"button\" onClick={this.displayGoalOverlay}>Create Goal</button>\n                    </div>\n                </div>\n            <div className=\"main\">\n                <div className=\"goaltypeselector\">\n                    <h2>Sort Goals</h2>\n                    <div className=\"sort\">\n                        <ul>\n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Show Current</span></li> \n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Show Completed</span></li>\n                        </ul>\n                    </div>\n                    <div className=\"goaltype\">\n                        <h3>TimeFrame</h3>\n                        <ul>\n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Daily Goals</span></li> \n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Weekly Goals</span></li>\n                        </ul>\n                    </div>\n                    <div className=\"catagories\">\n                        <h3>Catagories</h3>\n                        <ul>\n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Programming</span></li> \n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Knowledge</span></li>\n                            <li><img src=\"../src/Images/pressed.png\" alt=\"\"/><span>Workout</span></li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"goals\">\n                    <div className=\"dailygoals\">\n                        <DailyGoalHeading dailyGoals={this.state.goals.dailyGoals}/>    \n                        <div className=\"dailygoalslist\">\n                        <DailyGoals dailyGoals={this.state.goals.dailyGoals} deleteGoal={this.deleteGoal} />         \n                        </div>\n                    </div>\n                    <OtherGoals otherGoalCategories={this.state.goals.otherGoalsCategories} deleteGoal={this.deleteGoal} />    \n                </div>\n                {!this.state.otherStuffs.overlayIsHidden && <Overlay closeGoalOverlay={this.closeGoalOverlay} otherGoalCategories={this.state.goals.otherGoalsCategories} stateAdd={this.stateAdd} />}   \n            </div>\n    </div>\n    );\n    }\n}\n\nexport default App;\n\n// const createGoalBtn = document.getElementById('button');\n// const goalCreatePopup = document.getElementById('creategoaloverlay');\n// const cancelBtn = document.getElementById('cancelbutton');\n\n// createGoalBtn.addEventListener('click', ()=>{\n//     goalCreatePopup.style.display = \"block\";\n// }, false)\n\n// cancelBtn.addEventListener('click', ()=>{\n//     goalCreatePopup.style.display = \"none\";\n// }, false)\n\n// const navSlide = () => {\n//     const navdropdown = document.querySelector('.navdropdown');\n//     const nav = document.querySelector('.sidenav');\n//     const navlinks = document.querySelectorAll('.navlinks a')\n\n//     navdropdown.addEventListener('click', ()=>{\n//         nav.classList.toggle('nav-active');\n//         navlinks.forEach((link, index)=>{\n//             if(link.style.animation){\n//                 link.style.animation = '';\n//             }\n//             else{\n//                 link.style.animation = `navLinkFade 0.5s ease forwards ${(index / 7) + .15}s`;\n//             }\n//         });\n\n//         navdropdown.classList.toggle('toggle');\n//     });\n// }\n// navSlide();"]},"metadata":{},"sourceType":"module"}