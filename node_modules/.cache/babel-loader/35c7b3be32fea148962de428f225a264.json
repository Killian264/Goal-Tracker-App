{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Killian\\\\Desktop\\\\Projects\\\\Goal-Tracker\\\\src\\\\DailyGoals\\\\DailyGoals.js\";\nimport React, { Component } from 'react';\nimport { getYeseterday, getToday } from '../commonCommands';\n\nclass DailyGoals extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      renderAmount: 0\n    };\n    this.heading = React.createRef();\n\n    this.test = () => {\n      this.props.dailyGoals.forEach(goal => {\n        if (Date.parse(goal.endDate) <= Date.parse(getYeseterday())) {\n          this.props.deleteGoal(goal.id, 'daily');\n        }\n\n        if (Date.parse(goal.lastDayUpdated) < Date.parse(getToday())) {\n          this.props.updateDaily();\n        }\n      });\n    };\n\n    this.updateState = len => {\n      // size of header is 200px checkmark is 80 px\n      len = Math.floor((len - 200) / 80);\n\n      if (len > 8) {\n        len = 8;\n      }\n\n      let state = this.state;\n      state.renderAmount = len;\n      this.setState({\n        state: state\n      });\n    };\n\n    this.listElement = (goal, i) => {\n      return React.createElement(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: goal.weeklyChecked[i],\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      })));\n    };\n\n    this.positivedateRenders = (goal, len) => {\n      let list = [];\n\n      for (let i = 1; i <= len; i++) {\n        list.push(this.listElement(goal, i + 4));\n      }\n\n      return [list];\n    };\n\n    this.negativedateRenders = (goal, len) => {\n      let list = [];\n\n      if (this.state.renderAmount === 2) {\n        return;\n      }\n\n      len = len / 2;\n      len < 2 ? len = Math.floor(len) : len = Math.ceil(len);\n\n      for (let i = 4 - len; i <= 3; i++) {\n        list.push(this.listElement(goal, i));\n      }\n\n      return [list];\n    };\n\n    this.onClick = e => {\n      this.props.deleteGoal(e.target.title, 'daily');\n    };\n\n    this.updateCheckMark = e => {\n      this.props.updateCheckMark(e.target.id);\n    };\n  }\n\n  componentDidMount() {\n    let len = this.heading.current.offsetWidth;\n    this.updateState(len);\n    this.test();\n  }\n\n  render() {\n    const _this$props = this.props,\n          dailyGoals = _this$props.dailyGoals,\n          deleteGoal = _this$props.deleteGoal,\n          updateCheckMark = _this$props.updateCheckMark;\n\n    const displayCheckBoxes = goal => {\n      return React.createElement(\"ul\", {\n        key: goal.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, this.negativedateRenders(goal, this.state.renderAmount), React.createElement(\"li\", {\n        key: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkbox checkboxmain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: goal.weeklyChecked[4],\n        readOnly: true,\n        onClick: () => {\n          updateCheckMark(goal.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))), this.positivedateRenders(goal, Math.floor(this.state.renderAmount / 2) - 2), React.createElement(\"li\", {\n        key: 888,\n        className: \"close-container\",\n        onClick: () => {\n          deleteGoal(goal.id, 'daily');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rightleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"close\")));\n    };\n\n    const displayDailyGoals = dailyGoals.map(goal => {\n      // if(Date.parse(goal.endDate) <= Date.parse(getYeseterday())){\n      //     this.props.deleteGoal(goal.id, 'daily')\n      // }\n      // if(Date.parse(goal.lastDayUpdated) < Date.parse(getToday())){\n      //     this.props.updateDaily()\n      // }\n      return React.createElement(\"div\", {\n        className: \"onedailygoal\",\n        key: goal.id,\n        ref: this.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"onedailygoalheading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, goal.title), goal.snippit), displayCheckBoxes(goal));\n    });\n    return React.createElement(\"div\", {\n      className: \"onedailygoalcheckmark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, displayDailyGoals);\n  }\n\n}\n\nexport default DailyGoals;","map":{"version":3,"sources":["C:\\Users\\Killian\\Desktop\\Projects\\Goal-Tracker\\src\\DailyGoals\\DailyGoals.js"],"names":["React","Component","getYeseterday","getToday","DailyGoals","state","renderAmount","heading","createRef","test","props","dailyGoals","forEach","goal","Date","parse","endDate","deleteGoal","id","lastDayUpdated","updateDaily","updateState","len","Math","floor","setState","listElement","i","weeklyChecked","positivedateRenders","list","push","negativedateRenders","ceil","onClick","e","target","title","updateCheckMark","componentDidMount","current","offsetWidth","render","displayCheckBoxes","displayDailyGoals","map","snippit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {getYeseterday, getToday} from '../commonCommands'\r\n\r\nclass DailyGoals extends Component {\r\n    state = {\r\n        renderAmount: 0\r\n    }\r\n    heading = React.createRef();\r\n    componentDidMount() {\r\n        let len = this.heading.current.offsetWidth\r\n        this.updateState(len);\r\n        this.test();\r\n    }\r\n    test =() =>{\r\n        this.props.dailyGoals.forEach(goal => {\r\n            if(Date.parse(goal.endDate) <= Date.parse(getYeseterday())){\r\n                this.props.deleteGoal(goal.id, 'daily')\r\n            }\r\n            if(Date.parse(goal.lastDayUpdated) < Date.parse(getToday())){\r\n                this.props.updateDaily()\r\n            }\r\n        })\r\n    }\r\n    updateState = (len)=> {\r\n        // size of header is 200px checkmark is 80 px\r\n        len = Math.floor((len - 200)/80)\r\n        if(len > 8){len = 8}\r\n        let state = this.state\r\n        state.renderAmount = len\r\n        this.setState({\r\n            state: state\r\n        })\r\n    }\r\n    listElement = (goal, i) =>{\r\n        return(\r\n            <li key={i}>\r\n                <label className=\"checkbox\">\r\n                    <input type=\"checkbox\" checked={goal.weeklyChecked[i]} readOnly={true}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n    positivedateRenders = (goal, len) => {\r\n        let list =[\r\n        ];\r\n        for(let i = 1; i <= len; i++){\r\n            list.push(this.listElement(goal, (i + 4)))\r\n        }\r\n        return(\r\n            [list]\r\n        )\r\n    }\r\n    negativedateRenders = (goal, len) => {\r\n        let list =[\r\n        ];\r\n        if(this.state.renderAmount === 2){\r\n           return;\r\n        }\r\n        len = len/2\r\n        len < 2 ? len = Math.floor(len) : len = Math.ceil(len)\r\n        for(let i = (4-len); i <= 3; i++){\r\n            list.push(this.listElement(goal, (i)))\r\n        }\r\n        return(\r\n            [list]\r\n        )\r\n    }\r\n    onClick = (e) => {\r\n        this.props.deleteGoal(e.target.title, 'daily')\r\n    }\r\n    updateCheckMark = (e) => {\r\n        this.props.updateCheckMark(e.target.id)\r\n    }\r\n\r\n    render() {\r\n        const{dailyGoals, deleteGoal, updateCheckMark} = this.props;\r\n        const displayCheckBoxes = (goal) =>{\r\n            return(\r\n                <ul key={goal.id}>\r\n                    {this.negativedateRenders(goal, this.state.renderAmount )}\r\n                    <li key={4}>\r\n                        <label className=\"checkbox checkboxmain\">\r\n                            <input type=\"checkbox\" checked={goal.weeklyChecked[4]} readOnly={true} onClick={() => {updateCheckMark(goal.id)}} />\r\n                            <span className=\"checkmark\"></span>\r\n                        </label>\r\n                    </li>\r\n                    {this.positivedateRenders(goal, Math.floor((this.state.renderAmount/2)) - 2) }\r\n                    <li key={888} className=\"close-container\"onClick={() => {deleteGoal(goal.id, 'daily')}}>\r\n                        <div className=\"leftright\"></div>\r\n                        <div className=\"rightleft\"></div>\r\n                        <label className=\"close\">close</label>\r\n                    </li>\r\n                </ul>\r\n            )\r\n        }\r\n        const displayDailyGoals = dailyGoals.map(goal => {\r\n            // if(Date.parse(goal.endDate) <= Date.parse(getYeseterday())){\r\n            //     this.props.deleteGoal(goal.id, 'daily')\r\n            // }\r\n            // if(Date.parse(goal.lastDayUpdated) < Date.parse(getToday())){\r\n            //     this.props.updateDaily()\r\n            // }\r\n            return(\r\n                <div className=\"onedailygoal\" key={goal.id} ref={this.heading}>\r\n                    <div className=\"onedailygoalheading\" >\r\n                        <h4>{goal.title}</h4>{goal.snippit}\r\n                    </div>\r\n                    {displayCheckBoxes(goal)}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"onedailygoalcheckmark\">\r\n                { displayDailyGoals }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DailyGoals\r\n"]},"metadata":{},"sourceType":"module"}