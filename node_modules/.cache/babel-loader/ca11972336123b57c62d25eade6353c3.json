{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Killian\\\\Desktop\\\\Projects\\\\Goal-Tracker\\\\reactappthingy\\\\my-app\\\\src\\\\DailyGoals\\\\DailyGoals.js\";\nimport React, { Component } from 'react';\nimport { getYeseterday } from '../commonCommands';\n\nclass DailyGoals extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      renderAmount: 0\n    };\n    this.heading = React.createRef();\n\n    this.updateState = len => {\n      // size of header is 200px checkmark is 80 px\n      len = Math.floor((len - 200) / 80);\n      len > 8 ? len = 8 : len = len;\n      let state = this.state;\n      state.renderAmount = len;\n      this.setState({\n        state: state\n      });\n    };\n\n    this.listElement = (goal, i) => {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: goal.weeklyChecked[i],\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })));\n    };\n\n    this.positivedateRenders = len => {\n      let list = [];\n\n      for (let i = 1; i <= len; i++) {\n        list.push(this.listElement(i));\n      }\n\n      return [list];\n    };\n\n    this.negativedateRenders = (goal, len) => {\n      let list = [];\n\n      if (!(this.state.renderAmount % 2 === 0)) {\n        len--;\n      }\n\n      for (let i = 3; i >= len; i--) {\n        list.push(this.listElement(goal, i));\n      }\n\n      return [list];\n    };\n\n    this.onClick = e => {\n      this.props.deleteGoal(e.target.title, 'daily');\n    };\n\n    this.updateCheckMark = e => {\n      console.log('THE ID ', e.target.id);\n      this.props.updateCheckMark(e.target.id);\n    };\n  }\n\n  componentDidMount() {\n    let len = this.heading.current.offsetWidth;\n    this.updateState(len);\n  }\n\n  render() {\n    const _this$props = this.props,\n          dailyGoals = _this$props.dailyGoals,\n          deleteGoal = _this$props.deleteGoal,\n          updateCheckMark = _this$props.updateCheckMark;\n\n    const displayCheckBoxes = goal => {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"onedailygoalcheckmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"checkbox checkboxmain\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        checked: goal.weeklyChecked[4],\n        readOnly: true,\n        onClick: () => {\n          this.props.updateCheckMark(goal.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"span\", {\n        className: \"checkmark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }))), React.createElement(\"li\", {\n        className: \"close-container\",\n        onClick: () => {\n          this.props.deleteGoal(goal.id, 'daily');\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"leftright\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"rightleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"close\")))));\n    };\n\n    const displayDailyGoals = dailyGoals.map(goal => {\n      if (Date.parse(goal.endDate) < Date.parse(getYeseterday())) {\n        {\n          this.props.deleteGoal(goal.id, 'daily');\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"onedailygoal\",\n        key: goal.id,\n        ref: this.heading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"onedailygoalheading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, goal.title), goal.snippit), displayCheckBoxes(goal));\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, displayDailyGoals);\n  }\n\n}\n\nexport default DailyGoals;","map":{"version":3,"sources":["C:\\Users\\Killian\\Desktop\\Projects\\Goal-Tracker\\reactappthingy\\my-app\\src\\DailyGoals\\DailyGoals.js"],"names":["React","Component","getYeseterday","DailyGoals","state","renderAmount","heading","createRef","updateState","len","Math","floor","setState","listElement","goal","i","weeklyChecked","positivedateRenders","list","push","negativedateRenders","onClick","e","props","deleteGoal","target","title","updateCheckMark","console","log","id","componentDidMount","current","offsetWidth","render","dailyGoals","displayCheckBoxes","displayDailyGoals","map","Date","parse","endDate","snippit"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {getYeseterday} from '../commonCommands'\r\n\r\nclass DailyGoals extends Component {\r\n    state = {\r\n        renderAmount: 0\r\n    }\r\n    heading = React.createRef();\r\n    componentDidMount() {\r\n      let len = this.heading.current.offsetWidth\r\n      this.updateState(len);\r\n    }\r\n    updateState = (len)=> {\r\n        // size of header is 200px checkmark is 80 px\r\n        len = Math.floor((len - 200)/80)\r\n        len > 8 ? len = 8 : len = len\r\n        let state = this.state\r\n        state.renderAmount = len\r\n        this.setState({\r\n            state: state\r\n        })\r\n    }\r\n    listElement = (goal, i) =>{\r\n        return(\r\n            <li>\r\n                <label className=\"checkbox\">\r\n                    <input type=\"checkbox\" checked={goal.weeklyChecked[i]} readOnly={true}/>\r\n                    <span className=\"checkmark\"></span>\r\n                </label>\r\n            </li>\r\n        )\r\n    }\r\n    positivedateRenders = (len) => {\r\n        let list =[\r\n        ];\r\n        for(let i = 1; i <= len; i++){\r\n            list.push(this.listElement(i))\r\n        }\r\n        return(\r\n            [list]\r\n        )\r\n    }\r\n    negativedateRenders = (goal, len) => {\r\n        let list =[\r\n        ];\r\n        if(!((this.state.renderAmount % 2) === 0)){\r\n            len--;\r\n        }\r\n        for(let i = 3; i >= len; i--){\r\n            list.push(this.listElement(goal, i))\r\n        }\r\n        return(\r\n            [list]\r\n        )\r\n    }\r\n    onClick = (e) => {\r\n        this.props.deleteGoal(e.target.title, 'daily')\r\n    }\r\n    updateCheckMark = (e) => {\r\n        console.log('THE ID ',e.target.id)\r\n        this.props.updateCheckMark(e.target.id)\r\n    }\r\n    \r\n    render() {\r\n        const{dailyGoals, deleteGoal, updateCheckMark} = this.props;\r\n        const displayCheckBoxes = (goal) =>{\r\n                return(\r\n                    <React.Fragment>\r\n                        <div className=\"onedailygoalcheckmark\">\r\n                            <ul>\r\n                                {/* {this.negativedateRenders(goal, (4 - this.state.renderAmount)/2 )} */}\r\n                                <li>\r\n                                    <label className=\"checkbox checkboxmain\">\r\n                                        <input type=\"checkbox\" checked={goal.weeklyChecked[4]} readOnly={true} onClick={() => {this.props.updateCheckMark(goal.id)}} />\r\n                                        <span className=\"checkmark\"></span>\r\n                                    </label>\r\n                                </li>\r\n                                <li className=\"close-container\"onClick={() => {this.props.deleteGoal(goal.id, 'daily')}}>\r\n                                    <div className=\"leftright\"></div>\r\n                                    <div className=\"rightleft\"></div>\r\n                                    <label className=\"close\">close</label>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n        }\r\n        const displayDailyGoals = dailyGoals.map(goal => {\r\n            if(Date.parse(goal.endDate) < Date.parse(getYeseterday())){\r\n                {this.props.deleteGoal(goal.id, 'daily')}\r\n            }\r\n            return(\r\n                <div className=\"onedailygoal\" key={goal.id} ref={this.heading}>\r\n                    <div className=\"onedailygoalheading\" >\r\n                        <h4>{goal.title}</h4>{goal.snippit}\r\n                    </div>\r\n                    {displayCheckBoxes(goal)}\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                { displayDailyGoals }\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default DailyGoals\r\n"]},"metadata":{},"sourceType":"module"}