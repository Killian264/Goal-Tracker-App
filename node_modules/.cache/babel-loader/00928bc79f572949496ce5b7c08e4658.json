{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Killian\\\\Desktop\\\\Projects\\\\Goal-Tracker\\\\reactappthingy\\\\my-app\\\\src\\\\TypeSelector.js\";\nimport React, { Component } from 'react';\nimport './App.css';\n\nclass TypeSelector extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dailyLength: 0,\n      otherLength: 0,\n      completedLength: 0\n    };\n  }\n\n  render() {\n    const goals = this.props.goals.goals;\n\n    const updateRenderIfs = e => {\n      this.props.updateRenderIfs(e.target.id);\n    };\n\n    const getLengths = () => {\n      let state = this.state;\n      let length = 0;\n      let lengthTemp = 0; // daily\n\n      state.dailyLength = this.props.goals.dailyGoals.length; // otherGoals\n\n      this.props.goals.otherGoalsCategories.map(catagories => {\n        lengthTemp = catagories.otherGoals.length;\n        state[catagories.catagory] = lengthTemp;\n        length += lengthTemp;\n        lengthTemp = 0;\n        return true;\n      });\n      state.otherLength = length;\n      length = 0;\n      lengthTemp = 0; //completed\n      // daily\n\n      length = this.props.goals.completed.dailyGoals.length; // otherGoals\n\n      this.props.goals.completed.otherGoalsCategories.map(catagories => {\n        lengthTemp = catagories.otherGoals.length;\n        state[catagories.catagory] = lengthTemp;\n        length += lengthTemp;\n        lengthTemp = 0;\n        return true;\n      });\n      state.completedLength = length;\n      return React.createElement(\"div\", {\n        className: \"goaltypeselector\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Sort Goals\"), React.createElement(\"div\", {\n        className: \"sort\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        onClick: updateRenderIfs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: \"renderCurrent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Current: \", state.dailyLength + state.otherLength), React.createElement(\"li\", {\n        id: \"renderCompleted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Completed: \", state.completedLength))), React.createElement(\"div\", {\n        className: \"goaltype\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Goal Type\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        id: \"allTypes\",\n        onClick: updateRenderIfs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"AllGoals: \", state.dailyLength), React.createElement(\"li\", {\n        id: \"renderDaily\",\n        onClick: updateRenderIfs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Daily Goals: \", state.dailyLength), React.createElement(\"li\", {\n        id: \"renderOther\",\n        onClick: updateRenderIfs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Other Goals: \", state.otherLength))), React.createElement(\"div\", {\n        className: \"catagories\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Catagories\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, renderSelector)));\n    };\n\n    const renderSelector = this.props.goals.otherGoalsCategories.map(catagories => {\n      return React.createElement(\"li\", {\n        key: catagories.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, catagories.category, \": \", catagories.otherGoals.length));\n    });\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, getLengths());\n  }\n\n}\n\nexport default TypeSelector;","map":{"version":3,"sources":["C:\\Users\\Killian\\Desktop\\Projects\\Goal-Tracker\\reactappthingy\\my-app\\src\\TypeSelector.js"],"names":["React","Component","TypeSelector","state","dailyLength","otherLength","completedLength","render","goals","props","updateRenderIfs","e","target","id","getLengths","length","lengthTemp","dailyGoals","otherGoalsCategories","map","catagories","otherGoals","catagory","completed","renderSelector","category"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass TypeSelector extends Component {\r\n    state = {\r\n        dailyLength: 0,\r\n        otherLength: 0,\r\n        completedLength: 0\r\n    }\r\n    render() {\r\n        const{goals} = this.props.goals;\r\n        const updateRenderIfs = (e) =>{\r\n            this.props.updateRenderIfs(e.target.id)\r\n        }\r\n        const getLengths = () =>{\r\n            let state = this.state;\r\n            let length = 0\r\n            let lengthTemp = 0\r\n            // daily\r\n            state.dailyLength = (this.props.goals.dailyGoals).length\r\n\r\n            // otherGoals\r\n            this.props.goals.otherGoalsCategories.map(catagories => {\r\n                lengthTemp = catagories.otherGoals.length\r\n                state[catagories.catagory] = lengthTemp\r\n                length += lengthTemp\r\n                lengthTemp = 0\r\n                return true\r\n            })\r\n            state.otherLength = length\r\n            length = 0\r\n            lengthTemp = 0\r\n\r\n            //completed\r\n            // daily\r\n            length = (this.props.goals.completed.dailyGoals).length\r\n\r\n            // otherGoals\r\n            this.props.goals.completed.otherGoalsCategories.map(catagories => {\r\n                lengthTemp = catagories.otherGoals.length\r\n                state[catagories.catagory] = lengthTemp\r\n                length += lengthTemp\r\n                lengthTemp = 0\r\n                return true\r\n            })\r\n            state.completedLength = length\r\n            return(\r\n                <div className=\"goaltypeselector\">\r\n                    <h2>Sort Goals</h2>\r\n                    <div className=\"sort\">\r\n                        <ul onClick={updateRenderIfs}>\r\n                            <li id='renderCurrent'>Current: {state.dailyLength + state.otherLength}</li> \r\n                            <li id='renderCompleted'>Completed: {state.completedLength}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"goaltype\">\r\n                        <h3>Goal Type</h3>\r\n                        <ul>\r\n                            <li id='allTypes' onClick={updateRenderIfs}>AllGoals: {state.dailyLength}</li> \r\n                            <li id='renderDaily' onClick={updateRenderIfs}>Daily Goals: {state.dailyLength}</li> \r\n                            <li id='renderOther' onClick={updateRenderIfs}>Other Goals: {state.otherLength}</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"catagories\">\r\n                        <h3>Catagories</h3>\r\n                        <ul>\r\n                            {renderSelector}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        const renderSelector = this.props.goals.otherGoalsCategories.map(catagories => {\r\n                return(\r\n                    <li key={catagories.id}><span>{catagories.category}: {catagories.otherGoals.length}</span></li> \r\n                )\r\n            })\r\n        return (\r\n            <React.Fragment>\r\n            {getLengths()}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default TypeSelector"]},"metadata":{},"sourceType":"module"}