{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Killian\\\\Desktop\\\\Projects\\\\Goal-Tracker\\\\reactappthingy\\\\my-app\\\\src\\\\Overlay.js\";\nimport React, { Component } from 'react';\n\nclass Overlay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: null,\n      snippit: null,\n      // '2019, 7, 1 00:00',\n      endDate: null,\n      type: 'daily',\n      category: 'newCategory',\n      newCategory: false\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.categoryOnChange = e => {\n      e.target.value == 'newCategory' ? this.state.newCategory = true : this.state.newCategory = false;\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.typeOnChange = e => {\n      this.setState({\n        type: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n\n      if (this.state.title && this.state.endDate && (!this.state.newCategory || !(this.state.category == 'newCategory'))) {\n        console.log(!(this.state.category == 'newCategory'));\n        this.props.stateAdd(this.state);\n      } else {\n        return window.alert(\"Please fill out all fields\");\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          otherGoalCategories = _this$props.otherGoalCategories,\n          closeGoalOverlay = _this$props.closeGoalOverlay,\n          stateAdd = _this$props.stateAdd;\n    const categories = otherGoalCategories.map(category => {\n      return React.createElement(\"option\", {\n        key: category.key,\n        value: category.category,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \" \", category.category);\n    });\n    return React.createElement(\"div\", {\n      className: \"creategoaloverlay\",\n      id: \"creategoaloverlay\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"creategoal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Create Goal\"), React.createElement(\"div\", {\n      className: \"goalallinput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Goal:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"goalinput goal\",\n      id: \"title\",\n      type: \"text\",\n      name: \"goal\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Short Description:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), \" \", React.createElement(\"input\", {\n      className: \"goalinput sDes\",\n      id: \"snippit\",\n      type: \"text\",\n      name: \"sDes\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Ends:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), \" \", React.createElement(\"input\", {\n      type: \"date\",\n      className: \"goalinput dDate\",\n      id: \"endDate\",\n      name: \"dDate\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Type:\", React.createElement(\"select\", {\n      name: \"type\",\n      id: \"type\",\n      className: \"type\",\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"daily\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \" Daily Goal\"), React.createElement(\"option\", {\n      value: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \" Default Goal\"))), \"Category:\", React.createElement(\"select\", {\n      name: \"type\",\n      className: \"type\",\n      id: \"category\",\n      onChange: this.categoryOnChange,\n      disabled: this.state.type == 'daily',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"newCategory\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \" New Category\"), categories), React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"New Category:\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), \" \", React.createElement(\"input\", {\n      className: \"goalinput category\",\n      id: \"category\",\n      type: \"text\",\n      name: \"category\",\n      onChange: this.onChange,\n      disabled: this.state.type == 'daily' || !this.state.newCategory,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"submitarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"cancelbutton\",\n      className: \"button\",\n      type: \"submit\",\n      value: \"Cancel\",\n      onClick: closeGoalOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"submitbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"button submit\",\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.onSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Overlay;","map":{"version":3,"sources":["C:\\Users\\Killian\\Desktop\\Projects\\Goal-Tracker\\reactappthingy\\my-app\\src\\Overlay.js"],"names":["React","Component","Overlay","state","title","snippit","endDate","type","category","newCategory","onChange","e","setState","target","id","value","categoryOnChange","typeOnChange","onSubmit","preventDefault","console","log","props","stateAdd","window","alert","render","otherGoalCategories","closeGoalOverlay","categories","map","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass Overlay extends Component {\r\n    state = {\r\n        title: null,\r\n        snippit: null,\r\n        // '2019, 7, 1 00:00',\r\n        endDate: null,\r\n        type: 'daily',\r\n        category: 'newCategory',\r\n        newCategory: false\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    categoryOnChange = (e) =>{\r\n        e.target.value == 'newCategory' ? this.state.newCategory = true : this.state.newCategory = false;\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n    typeOnChange = (e) => {\r\n        this.setState({\r\n            type: e.target.value\r\n        })\r\n    }\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if((this.state.title && this.state.endDate) && (!(this.state.newCategory) || !(this.state.category == 'newCategory')) ){\r\n            console.log(!(this.state.category == 'newCategory'))\r\n            this.props.stateAdd(this.state);\r\n        }\r\n        else{\r\n            return(\r\n                window.alert(\"Please fill out all fields\")\r\n            )\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const{otherGoalCategories , closeGoalOverlay, stateAdd} = this.props;\r\n        const categories = otherGoalCategories.map(category => {\r\n            return(\r\n                <option key={category.key} value={category.category}> {category.category}</option>\r\n            )\r\n        })\r\n        return (\r\n            <div className=\"creategoaloverlay\" id=\"creategoaloverlay\">\r\n              <div className=\"creategoal\">\r\n                  <h1>Create Goal</h1>\r\n                  <div className=\"goalallinput\">\r\n                      <ul>\r\n                            <li >Goal:<br/><input className=\"goalinput goal\" id=\"title\" type=\"text\" name=\"goal\" onChange={this.onChange}/></li>\r\n                            <li >Short Description:<br/> <input className=\"goalinput sDes\" id=\"snippit\" type=\"text\" name=\"sDes\" onChange={this.onChange}/></li>\r\n                            <li >Ends:<br/> <input type=\"date\" className=\"goalinput dDate\" id=\"endDate\" name=\"dDate\" onChange={this.onChange}/></li>\r\n                            <li>Type:\r\n                            <select name=\"type\" id=\"type\" className=\"type\" onChange={this.onChange}>\r\n                                <option value=\"daily\"> Daily Goal</option>\r\n                                <option value=\"default\"> Default Goal</option>\r\n                            </select>\r\n                            </li>\r\n                            Category:\r\n                            <select name=\"type\" className=\"type\" id='category' onChange={this.categoryOnChange} disabled={this.state.type == 'daily'}>\r\n                                <option value=\"newCategory\"> New Category</option>\r\n                                {categories}\r\n                            </select>\r\n                            <li >New Category:<br/> <input className=\"goalinput category\" id=\"category\" type=\"text\" name=\"category\" onChange={this.onChange} disabled={this.state.type == 'daily' || !(this.state.newCategory)}/></li>\r\n                      </ul>\r\n                  </div>\r\n                    <div className=\"submitarea\">\r\n                        <input id=\"cancelbutton\" className=\"button\" type=\"submit\" value=\"Cancel\" onClick={closeGoalOverlay}/>\r\n                        <div className=\"submitbutton\">\r\n                            <input className=\"button submit\" type=\"submit\" value=\"Submit\" onClick={this.onSubmit}/>\r\n                        </div>\r\n                    </div>\r\n              </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Overlay"]},"metadata":{},"sourceType":"module"}